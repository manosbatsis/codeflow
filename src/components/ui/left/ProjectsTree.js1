import React, {Component} from 'react';
import Tree, { getTreeLeafDataByIndexArray } from "material-ui-tree";
import FolderIcon from "@material-ui/icons/Folder";
import FolderOpenIcon from "@material-ui/icons/FolderOpen";
import Typography from "@material-ui/core/Typography";
import { withStyles } from '@material-ui/core/styles';

const styles = () => ({
    container: {
      margin: 0,
      boxShadow: 'none',
      padding:'0px',
      fontSize: 20
    },
    icon: {
      fontSize: 20
    },
    leaf: {
      display: "flex",
      alignItems: "center",
      fontSize: 20
    }
  });
  
const renderTreeLeafLabel = (leafData, expand) => {
    const { classes } = this.props;
    const { path, type } = leafData;
    if (type === "tree") {
      if (expand) {
        return (
          <Typography viriant="body1" className={classes.leaf}>
            <FolderOpenIcon className={classes.icon} />
            {path}
          </Typography>
        );
      }
      return (
        <Typography viriant="body1" className={classes.leaf}>
          <FolderIcon className={classes.icon} />
          {path}
        </Typography>
      );
    }
    if (type === "blob") {
      if (path.startsWith(".") || path.includes("config")) {
        return (
          <Typography viriant="body2" className={classes.leaf}>
            <SettingsIcon className={classes.icon} />
            {path}
          </Typography>
        );
      }
      if (path.endsWith(".js")) {
        return (
          <Typography viriant="body2" className={classes.leaf}>
            <DescriptionIcon className={classes.icon} />
            {path}
          </Typography>
        );
      }
      return (
        <Typography viriant="body2" className={classes.leaf}>
          <InsertDriveFileIcon className={classes.icon} />
          {path}
        </Typography>
      );
    }
  };

class ProjectsTree extends Component {

    constructor()   {
        super();
        this.state = {
            alignRight: false,
            data: {
                // path: "Projects",
                // type: "tree",
                // sha: "b3d36479a033ed6296c34fdf689d5cdbcf7a0136",
                tree: [
                    {
                        "path": "src",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "6f3f4ebbb6ea9344aad312c34e3f17340ee1f114",
                        "url": "https://api.github.com/repos/shallinta/material-ui-tree/git/trees/6f3f4ebbb6ea9344aad312c34e3f17340ee1f114"
                      }                    
                ]
            }
        };
    }
        


    render()    { 

        const { classes } = this.props;

        return (
            <div className="projects-tree">
                <Tree
                className={classes.container}
                data={this.state.data}
                labelName="path"
                valueName="sha"
                childrenName="tree"
                renderLabel={this.renderTreeLeafLabel}
                getActionsData={this.getTreeLeafActionsData}
                requestChildrenData={this.requestTreeLeafChildrenData}
                />
            </div>    
        );
    } 
}

export default withStyles(styles, { withTheme: true })(ProjectsTree);